# Generated by Django 3.0.8 on 2020-07-30 08:40

import account.models_addon
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models
import stdimage.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title for application at least 4 Char', max_length=255, validators=[django.core.validators.MinLengthValidator(4)], verbose_name='Title')),
                ('body', models.TextField(help_text='You can use HTML tags to style your body.', verbose_name='Body')),
                ('job_title', models.CharField(max_length=255, verbose_name='Job Title')),
                ('place_name', models.CharField(default='Not specified yet', help_text='Or you can place a Marker down in the map and automatically will add place name.', max_length=255, verbose_name='Work City/State')),
                ('latitude', models.DecimalField(blank=True, decimal_places=25, default=None, help_text='Mark any place down from the map to get Location Coordinates.', max_digits=30, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=25, default=None, help_text='Make sure to put the right coordinates (follow this <a href="https://support.google.com/maps/answer/18539?co=GENIE.Platform%3DDesktop&hl=en#6387158" target="_blank">link</a>)', max_digits=30, null=True, verbose_name='Longitude')),
                ('deadline', models.DateTimeField(help_text='Note that the end time will be at the midnight of the day you picked.', verbose_name='deadline')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Apply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('english_skill', models.IntegerField(blank=True, choices=[(1, 'High'), (2, 'Good'), (3, 'Medium'), (4, 'Low')], null=True, verbose_name='english skill')),
                ('overall_skill', models.IntegerField(blank=True, choices=[(1, 'High'), (2, 'Good'), (3, 'Medium'), (4, 'Low')], null=True, verbose_name='overall skill')),
                ('leading_skill', models.IntegerField(blank=True, choices=[(1, 'High'), (2, 'Good'), (3, 'Medium'), (4, 'Low')], null=True, verbose_name='leading skill')),
                ('managing_skill', models.IntegerField(blank=True, choices=[(1, 'High'), (2, 'Good'), (3, 'Medium'), (4, 'Low')], null=True, verbose_name='managing skill')),
                ('communication_skill', models.IntegerField(blank=True, choices=[(1, 'High'), (2, 'Good'), (3, 'Medium'), (4, 'Low')], null=True, verbose_name='communication skill')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Application')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, verbose_name='question text')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Application')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('apply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Apply')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200, verbose_name='choice text')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Question')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', stdimage.models.StdImageField(default='static/default/img/application.png', help_text='Make sure to add only supported extension: png, jpg and jpeg', max_length=255, upload_to=account.models_addon.UploadToPathAndRename('upload/img/application_cover'), validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg']), stdimage.validators.MinSizeValidator(400, 400), stdimage.validators.MaxSizeValidator(2600, 2600)], verbose_name='Application Cover')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='application.Application')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Make sure to add only supported extension: txt, pdf, docx, xlsx, zip and rar', max_length=255, upload_to=account.models_addon.UploadToPathAndRename('upload/files/applications'), validators=[django.core.validators.FileExtensionValidator(['txt', 'pdf', 'doc', 'docx', 'xls', 'xlsx', 'zip', 'rar'])], verbose_name='Application File')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='application.Application')),
            ],
        ),
    ]
