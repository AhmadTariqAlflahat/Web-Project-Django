# Generated by Django 3.0.8 on 2020-07-22 18:25

import account.models_addon
import account.validators
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import stdimage.models
import stdimage.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(help_text='Enter valid email: e.g. example@domain.com', max_length=60, unique=True, verbose_name='email')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Enter Username: e.g. Mark99', max_length=30, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('city', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, default=None, max_length=2, null=True, verbose_name='country')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='join date')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_company', models.BooleanField(default=False)),
                ('is_worker', models.BooleanField(default=True)),
                ('global_token', models.CharField(default=uuid.uuid4, max_length=255)),
                ('profile_pic', stdimage.models.StdImageField(default='static/default/img/profile.png', upload_to=account.models_addon.UploadToPathAndRename('upload/img/profile'), validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'PNG', 'JPG']), stdimage.validators.MinSizeValidator(300, 300), stdimage.validators.MaxSizeValidator(1600, 1600)])),
                ('cover_pic', stdimage.models.StdImageField(default='static/default/img/cover.png', upload_to=account.models_addon.UploadToPathAndRename('upload/img/cover'), validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'PNG', 'JPG']), stdimage.validators.MinSizeValidator(400, 400), stdimage.validators.MaxSizeValidator(2600, 2600)])),
                ('bio', models.TextField(blank=True, default="Hey there, I'm new here can you help with that.", max_length=200, null=True)),
                ('facebook_url', models.URLField(blank=True, default=None, null=True, validators=[account.validators.social_url_checker])),
                ('twitter_url', models.URLField(blank=True, default=None, null=True, validators=[account.validators.social_url_checker])),
                ('linkedin_url', models.URLField(blank=True, default=None, null=True, validators=[account.validators.social_url_checker])),
                ('github_url', models.URLField(blank=True, default=None, null=True, validators=[account.validators.social_url_checker])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(blank=True, default=None, help_text='Enter Company Name', max_length=150, null=True, verbose_name='company name')),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(help_text='Enter First Name', max_length=150, verbose_name='first name')),
                ('middle_name', models.CharField(help_text='Enter Middle Name', max_length=150, verbose_name='middle name')),
                ('last_name', models.CharField(help_text='Enter Last Name', max_length=150, verbose_name='last name')),
                ('birthday', models.DateTimeField(blank=True, default=None, null=True, verbose_name='birthday')),
                ('nationality', django_countries.fields.CountryField(blank=True, default=None, max_length=2, null=True, verbose_name='nationality')),
                ('ssid', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
        ),
    ]
